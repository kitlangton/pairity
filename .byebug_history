continue
pair
continue
next
remaining_people - pair
remaining_people
pair
continue
exit
pair
exit
pair
remaining_people
set
exit
others
person
others
person
people
others
exit
set
self.set
set
person
other
person
scores
exit
next
answer
next
answer
remaining_people
next
min[:person]
person
remaining_people
people
next
peers - pair
peers
pair
next
exit
continue
next
pair
next
pair
next
pair
next
pair
next
pair
next
netx
next
pair
next
peers
pair
continue
next
first
pairs
next
pairs
first
pair
pairs
next
nxt
next
pairs
next
pairs
pair
next
pairs
pair
next
pairs
pair
exit
continue
pair.sort
pair
continue
@matrix[pair.reverse]
pair
@matrix[pair.sort]
@matrix[pair]
pair
next
continue
next
continue
next
args
continue
args.sort
args
*args
continue
pair.sort
pair
pair.sort
@matrix
pair
exit
continue
ws.max_rows
ws
continue
@pairs
continue
pairs
next
exit
continue
pairs
next
pairs
continue
pair
pairs
next
pairs
pair[1]
pair[0]
pairs
pair
continue
pairs
pair
unpaired.combination(2).to_a
unpaired.combination(2)
pairs
unpaired
pair
next
@pairs
1
continue
@pairs
1
continue
next
continue
@pairs
@pairs[1], @pairs[-1] = @pairs[-1], @pairs[1]
@pairs.index(pair)
pair = @pairs.find { |pair| pair.any? { |person| person.name == "Han Solo" } }
@pairs
continue
p2
p1
p2
p1
@matrix
continue
help
back
p
n
next
@people
matrix
step
help
continue
next
person
matrix
pry
help
